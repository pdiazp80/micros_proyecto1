{
  "info": {
    "name": "User Service API",
    "_postman_id": "b1e1c2d3-4567-890a-bcde-1234567890ab",
    "description": "# User Service API\n\nColección de endpoints para el microservicio de gestión de usuarios.\n\n## Endpoints disponibles\n- Crear usuario\n- Obtener usuario por ID\n- Actualizar usuario\n- Eliminar usuario\n\nIncluye ejemplos de request y response, así como descripciones detalladas de cada endpoint.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Crear usuario",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"usuario1\",\n  \"email\": \"usuario1@email.com\",\n  \"password\": \"Password123!\"\n}"
        },
        "url": {
          "raw": "http://localhost:8000/users",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8000",
          "path": [
            "users"
          ]
        },
        "description": "Crea un nuevo usuario en el sistema.\n\n### Request Body\n- `username` (string, requerido): Nombre de usuario único.\n- `email` (string, requerido): Correo electrónico válido.\n- `password` (string, requerido): Contraseña segura.\n\n### Response\n- **201 Created**: Usuario creado exitosamente.\n- **400 Bad Request**: Datos inválidos o usuario ya existe."
      },
      "response": [
        {
          "name": "Usuario creado",
          "originalRequest": {},
          "status": "Created",
          "code": 201,
          "body": "{\n  \"id\": 1,\n  \"username\": \"usuario1\",\n  \"email\": \"usuario1@email.com\"\n}",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      ]
    },
    {
      "name": "Obtener usuario por ID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8000/users/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8000",
          "path": [
            "users",
            "1"
          ]
        },
        "description": "Obtiene la información de un usuario por su ID.\n\n### Path Parameter\n- `id` (integer, requerido): ID del usuario.\n\n### Response\n- **200 OK**: Usuario encontrado.\n- **404 Not Found**: Usuario no existe."
      },
      "response": [
        {
          "name": "Usuario encontrado",
          "originalRequest": {},
          "status": "OK",
          "code": 200,
          "body": "{\n  \"id\": 1,\n  \"username\": \"usuario1\",\n  \"email\": \"usuario1@email.com\"\n}",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      ]
    },
    {
      "name": "Actualizar usuario",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"usuario1_modificado\",\n  \"email\": \"usuario1nuevo@email.com\",\n  \"password\": \"NuevoPassword123!\"\n}"
        },
        "url": {
          "raw": "http://localhost:8000/users/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8000",
          "path": [
            "users",
            "1"
          ]
        },
        "description": "Actualiza la información de un usuario existente.\n\n### Path Parameter\n- `id` (integer, requerido): ID del usuario.\n\n### Request Body\n- `username` (string, opcional): Nuevo nombre de usuario.\n- `email` (string, opcional): Nuevo correo electrónico.\n- `password` (string, opcional): Nueva contraseña.\n\n### Response\n- **200 OK**: Usuario actualizado.\n- **404 Not Found**: Usuario no existe."
      },
      "response": [
        {
          "name": "Usuario actualizado",
          "originalRequest": {},
          "status": "OK",
          "code": 200,
          "body": "{\n  \"id\": 1,\n  \"username\": \"usuario1_modificado\",\n  \"email\": \"usuario1nuevo@email.com\"\n}",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      ]
    },
    {
      "name": "Eliminar usuario",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:8000/users/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8000",
          "path": [
            "users",
            "1"
          ]
        },
        "description": "Elimina un usuario del sistema por su ID.\n\n### Path Parameter\n- `id` (integer, requerido): ID del usuario.\n\n### Response\n- **200 OK**: Usuario eliminado.\n- **404 Not Found**: Usuario no existe."
      },
      "response": [
        {
          "name": "Usuario eliminado",
          "originalRequest": {},
          "status": "OK",
          "code": 200,
          "body": "{\n  \"message\": \"Usuario eliminado exitosamente.\"\n}",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      ]
    }
  ]
}